services:
  db:
    image: postgres:15
    container_name: gestao_estoque_db
    env_file: 
      - .env
      - ./backend/.env.docker

    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d gestao_estoque_manutencao"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - gestao_estoque_network
    
  app:
    build: ./backend
    env_file: 
      - .env
      - ./backend/.env.docker
    container_name: gestao_estoque_app
    working_dir: /app
    volumes:
      - ./backend:/app
    ports:
      - "6000:6000"
    depends_on:
      db: 
        condition: service_healthy
    command: ["/bin/sh", "-c", "./wait-for-db.sh && flask run --host=0.0.0.0 --port=6000 --reload"]
    networks:
      - gestao_estoque_network

  frontend:
    build:
      context: ./frontend
    container_name: gestao_estoque_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - app
    command: ["sh", "-c", "cp .env.docker .env && npm ci || npm install && npm run dev -- --host 0.0.0.0 --port 5173"]
    environment:
    - IN_DOCKER=true
    - VITE_API_URL=http://app:6000
    networks:
      - gestao_estoque_network

volumes:
  pg_data:

networks:
  gestao_estoque_network:
    driver: bridge
